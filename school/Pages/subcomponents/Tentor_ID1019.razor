@using Microsoft.EntityFrameworkCore
@using System.IO
@using System.Text;
@inject school.Data.ApplicationDbContext _context

<MudTable ServerData="@(new Func<TableState, Task<TableData<Tenta>>>(ServerReload))" @ref="table" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Datum</MudTh>
        <MudTh>Examinator</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Datum">@context.Datum.Value.ToShortDateString()</MudTd>
        <MudTd DataLabel="Examinator">@context.Examinator</MudTd>
        <MudTd><MudIconButton OnClick="() => GetBytesFromPDF(context.Id)" Icon="@Icons.Custom.FileFormats.FilePdf" Color="Color.Secondary"></MudIconButton></MudTd>
        <MudTd>
            <MudIconButton OnClick="() => Delete(context)" Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Class="ma-2"></MudIconButton>
        </MudTd>
    </RowTemplate>
</MudTable>
<NoJS.PDFViewer.PDFViewer Document="@pdf"
                          DocumentHeight="100%"
                          DocumentName="@DocumentName()"
                          DocumentWidth="100%"/>

@code {
    public MudTable<Tenta> table;

    public byte[] pdf;

    // GET
    private async Task<TableData<Tenta>> ServerReload(TableState state)
    {
        var results = await _context.Tentamen.Where(x => x.Kursnamn == "ID1019").ToListAsync();
        StateHasChanged();
        return new TableData<Tenta>() { Items = results };
    }

    // DELETE
    private async void Delete(Tenta item)
    {
        _context.Tentamen.Remove(item);
        _context.SaveChanges();

        await table.ReloadServerData();
        Snackbar.Add("Deleted", Severity.Normal);
    }

    public void GetBytesFromPDF(int Id)
    {
        Tenta tenta = _context.Tentamen.Where(x => x.Id == Id).FirstOrDefault();
        pdf = Convert.FromBase64String(tenta.Data);
    }

    public string DocumentName()
    {
        return "tenta.pdf";
    }
}
