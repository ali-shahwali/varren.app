@using Microsoft.EntityFrameworkCore
@using System.IO
@using System.Text;
@inject school.Data.ApplicationDbContext _context

<MudTable ServerData="@(new Func<TableState, Task<TableData<Tenta>>>(ServerReload))" @ref="table" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Datum</MudTh>
        <MudTh>Examinator</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Datum">@context.Datum.Value.ToShortDateString()</MudTd>
        <MudTd DataLabel="Examinator">@context.Examinator</MudTd>
        <MudTd>
            <MudIconButton OnClick="@(e => GetBytesFromPDF(context, true))" Icon="@Icons.Custom.FileFormats.FilePdf" Color="Color.Secondary"/>
        </MudTd>
        <MudTd>
            <MudIconButton OnClick="() => ToggleOverlayDelete(true)" Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Class="ma-2" />
            <MudOverlay Visible="isVisibleDelete" DarkBackground="true" Absolute="true">
                <MudCard Style="width: 200px; height: 200px">
                    <MudCardContent>
                        <MudText>Är du säker?</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(e => Delete(context, false))">Ja, ta bort!</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => ToggleOverlayDelete(false)">Nej</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudOverlay>
        </MudTd>
    </RowTemplate>
</MudTable>

<MudOverlay Style="padding-top: 350px" Visible="isVisiblePdf" DarkBackground="true" Absolute="true">
    <NoJS.PDFViewer.PDFViewer Document="@pdf"
                              DocumentHeight="1000px"
                              DocumentName="@DocumentName()"
                              DocumentWidth="1500px"/>
    <MudButton Style="padding-bottom: 50px" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick="@(e => ToggleOverlayPdf(false))"> Stäng </MudButton>
</MudOverlay>

@code {
    public MudTable<Tenta> table;

    public byte[] pdf { get; set; }

    public bool isVisiblePdf;

    public bool isVisibleDelete;

    
    private async Task<TableData<Tenta>> ServerReload(TableState state)
    {
        var results = await _context.Tentamen.Where(x => x.Kursnamn == "ID1019").ToListAsync();
        StateHasChanged();
        return new TableData<Tenta>() { Items = results };
    }

    
    private async void Delete(Tenta item, bool toggle)
    {
        _context.Tentamen.Remove(item);
        _context.SaveChanges();

        await table.ReloadServerData();
        Snackbar.Add("Deleted", Severity.Normal);
        ToggleOverlayDelete(toggle);
    }

    public void GetBytesFromPDF(Tenta tenta, bool toggle)
    {
        _context.Tentamen.Where(x => x.Id == tenta.Id).FirstOrDefault();
        pdf = Convert.FromBase64String(tenta.Data);
        ToggleOverlayPdf(toggle);
    }

    public void ToggleOverlayPdf(bool toggle)
    {
        isVisiblePdf = toggle;
        StateHasChanged();
    }

    public void ToggleOverlayDelete(bool toggle)
    {
        isVisibleDelete = toggle;
        StateHasChanged();
    }

    public string DocumentName()
    {
        return "tenta.pdf";
    }
}
