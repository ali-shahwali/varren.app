@using Microsoft.EntityFrameworkCore
@inject school.Data.ApplicationDbContext _context

<MudTable ServerData="@(new Func<TableState, Task<TableData<Tentor>>>(ServerReload))" @ref="table" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Datum</MudTh>
        <MudTh>Examinator</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Datum">@context.Datum.Value.ToShortDateString()</MudTd>
        <MudTd DataLabel="Examinator">@context.Examinator</MudTd>
        <MudTd>Visa</MudTd>
        <MudTd>
            <MudIconButton OnClick="() => Delete(context)" Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Class="ma-2"></MudIconButton>
        </MudTd>
    </RowTemplate>
</MudTable>
<NoJS.PDFViewer.PDFViewer Document="@GetBytesFromPDF()"
                          DocumentHeight="100%"
                          DocumentName="@DocumentName()"
                          DocumentWidth="100%"
                          SaveBtnImage="css/nojs-icons/icons8-save-26.png" />
@code {
    public MudTable<Tentor> table;

    // GET
    private async Task<TableData<Tentor>> ServerReload(TableState state)
    {
        var results = await _context.Tentor.Where(x => x.Kursnamn == "ID1019").ToListAsync();
        StateHasChanged();
        return new TableData<Tentor>() { Items = results };
    }

    // DELETE
    private async void Delete(Tentor item)
    {
        _context.Tentor.Remove(item);
        _context.SaveChanges();

        await table.ReloadServerData();
        Snackbar.Add("Deleted", Severity.Normal);
    }

    public byte[] GetBytesFromPDF()
    {
        Tentor tenta = _context.Tentor.Where(x => x.Id == 20).FirstOrDefault();
        string x = Convert.ToBase64String(tenta.Data);
        
        return ;
    }

    public string DocumentName()
    {
        return "tenta.pdf";
    }
}
