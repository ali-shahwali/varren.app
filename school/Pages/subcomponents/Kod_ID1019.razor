@using Microsoft.EntityFrameworkCore
@inject IJSRuntime _jsRuntime
@inject school.Data.ApplicationDbContext _context

<MudTable ServerData="@(new Func<TableState, Task<TableData<Kod>>>(ServerReload))" @ref="table" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Syfte</MudTh>
        <MudTh>Skapare</MudTh>
        <MudTh>Språk</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Syfte">@context.Syfte</MudTd>
        <MudTd DataLabel="Skapare">@context.Skapare</MudTd>
        <MudTd DataLabel="Språk">@context.Lang</MudTd>
        <MudTd>
            <MudIconButton OnClick="@(e => OpenNewTab(context.Id))" Variant="Variant.Filled" Icon="@Icons.Custom.FileFormats.FileCode" Color="Color.Primary" />
        </MudTd>
        <MudTd>
            <MudIconButton OnClick="@(e => ToggleDeleteBox(context))" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
        </MudTd>
    </RowTemplate>
</MudTable>



@* DELETE PROMPT *@
<MudMessageBox @ref="mbox" Title="Varning" CancelText="Avbryt">
    <MessageContent>
        Är du säker?
    </MessageContent>
    <YesButton>
        <MudButton OnClick="Delete" Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.DeleteForever">Ja, Ta bort!</MudButton>
    </YesButton>
</MudMessageBox>

@code {
    public MudTable<Kod> table;

    private Kod CurrentKod;

    private MudMessageBox mbox { get; set; }

    private string state = "Message box hasn't been opened yet";

    private string Code;

    [Parameter]
    public int Id {get;set;}

    [Parameter]
    public string Kurs{ get; set; }

    // LOAD DATA FROM DATABASE
    private async Task<TableData<Kod>> ServerReload(TableState state)
    {
        var results = await _context.Code.Where(x => x.Kursnamn == "ID1019").OrderByDescending(x => x.Lang).ToListAsync();
        StateHasChanged();
        return new TableData<Kod>() { Items = results };
    }

    // DELETE EXAM
    private async void Delete()
    {
        _context.Code.Remove(CurrentKod);
        _context.SaveChanges();

        await table.ReloadServerData();
        Snackbar.Add("Deleted", Severity.Normal);
    }

    // OPEN DELETE PROMPT
    private async void ToggleDeleteBox(Kod kod)
    {
        CurrentKod = kod;
        bool? result = await mbox.Show();
        state = result == null ? "Cancelled" : "Deleted!";
        StateHasChanged();
    }

    private async Task OpenNewTab(int id)
    {
        Kod kod = await _context.Code.Where(x => x.Id == id).FirstOrDefaultAsync();
        Kurs = kod.Kursnamn;
        Id = id;
        await _jsRuntime.InvokeVoidAsync("blazorOpen", new object[2] { $"/{Kurs}/{Id}/", "_blank" });
    }

}
