@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject school.Data.ApplicationDbContext _context




@code {
    public MudTable<IdentityUser> table;

    // load only admin accounts from database
    private async Task<TableData<IdentityUser>> ServerReload(TableState state)
    {
        var userRoles = await _context.UserRoles.Where(x => x.RoleId.Equals("admin")).ToListAsync();
        var results = new List<IdentityUser>();
        foreach (var item in userRoles)
        {
            var user = await _UserManager.Users.Where(x => x.Id == item.UserId).FirstOrDefaultAsync();
            results.Add(user);
        }

        StateHasChanged();
        return new TableData<IdentityUser>() { Items = results };
    }

    /*
    private async Task OpenEditPage(string id)
    {

        NavigationManager.NavigateTo($"/administrator/edit/{account.Id}");
    }
    */
}
